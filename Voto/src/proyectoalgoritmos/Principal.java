/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectoalgoritmos;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jose Alberto Pejuan
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        tf_nombreclase = new javax.swing.JTextField();
        tf_codigoclase = new javax.swing.JTextField();
        cb_facultades = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jb_agregarClase = new javax.swing.JButton();
        jb_fin = new javax.swing.JButton();
        jb_cargarDatos = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        tf_nombrealumno = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tf_numerodecuenta = new javax.swing.JTextField();
        jb_agregarAlumno = new javax.swing.JButton();
        cb_clases = new javax.swing.JComboBox();
        jb_agregarAPreferidas = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ta_listaclasespref = new javax.swing.JTextArea();
        cb_horapreferida = new javax.swing.JComboBox();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        tf_nombreMaestro = new javax.swing.JTextField();
        tf_idMaestro = new javax.swing.JTextField();
        cb_horasdisponibles = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jb_agregarHora = new javax.swing.JButton();
        jb_agregarMaestro = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta_listahorasdisponibles = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        ta_clasesposibles = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        cb_clasesposibles = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jb_agregarclasemaestro = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jb_generar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        ta_resultado = new javax.swing.JTextArea();
        jb_vermatriz = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        ta_matricula = new javax.swing.JTextArea();
        jb_simular = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cb_facultades.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ingenieria", "Arquitectura", "Derecho", "Salud", "General" }));

        jLabel4.setText("Nombre");

        jLabel5.setText("Codigo");

        jLabel6.setText("Facultad");

        jb_agregarClase.setText("Agregar Clase");
        jb_agregarClase.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_agregarClaseMouseClicked(evt);
            }
        });

        jb_fin.setText("Finalizar agregado de clases");
        jb_fin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_finMouseClicked(evt);
            }
        });

        jb_cargarDatos.setText("Cargar datos");
        jb_cargarDatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_cargarDatosMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(47, 47, 47)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cb_facultades, 0, 222, Short.MAX_VALUE)
                            .addComponent(tf_codigoclase)
                            .addComponent(tf_nombreclase))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 375, Short.MAX_VALUE)
                        .addComponent(jb_cargarDatos, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(276, 276, 276)
                        .addComponent(jb_agregarClase, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(51, 51, 51))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jb_fin, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tf_nombreclase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jb_cargarDatos, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_codigoclase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_facultades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(96, 96, 96)
                .addComponent(jb_agregarClase, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(jb_fin, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Clases", jPanel1);

        jLabel1.setText("Nombre");

        jLabel2.setText("Cuenta");

        jb_agregarAlumno.setText("Agregar alumno");
        jb_agregarAlumno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_agregarAlumnoMouseClicked(evt);
            }
        });

        jb_agregarAPreferidas.setText("Agregar a preferidas");
        jb_agregarAPreferidas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_agregarAPreferidasMouseClicked(evt);
            }
        });

        jLabel3.setText("Lista de clases preferidas por alumno");

        ta_listaclasespref.setEditable(false);
        ta_listaclasespref.setColumns(20);
        ta_listaclasespref.setRows(5);
        jScrollPane3.setViewportView(ta_listaclasespref);

        cb_horapreferida.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "7:00", "8:30", "10:10", "11:30", "13:00", "14:20", "15:40", "17:10", "18:30" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cb_clases, javax.swing.GroupLayout.Alignment.LEADING, 0, 235, Short.MAX_VALUE)
                                    .addComponent(tf_nombrealumno, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tf_numerodecuenta, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cb_horapreferida, javax.swing.GroupLayout.Alignment.LEADING, 0, 235, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(jb_agregarAPreferidas))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addComponent(jb_agregarAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jSeparator1)
                    .addComponent(jSeparator2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 258, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tf_nombrealumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(27, 27, 27)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(22, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(tf_numerodecuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cb_clases, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cb_horapreferida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jb_agregarAPreferidas))
                        .addGap(21, 21, 21)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jb_agregarAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(89, 89, 89))))
        );

        jTabbedPane1.addTab("Alumnos", jPanel2);

        cb_horasdisponibles.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "7:00", "8:30", "10:10", "11:30", "13:00", "14:20", "15:40", "17:10", "18:30" }));

        jLabel7.setText("Nombre");

        jLabel8.setText("ID");

        jLabel9.setText("Horas disponibles");

        jLabel10.setText("Lista de horas disponibles");

        jb_agregarHora.setText("Agregar hora");
        jb_agregarHora.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_agregarHoraMouseClicked(evt);
            }
        });

        jb_agregarMaestro.setText("Agregar Maestro");
        jb_agregarMaestro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_agregarMaestroMouseClicked(evt);
            }
        });

        ta_listahorasdisponibles.setEditable(false);
        ta_listahorasdisponibles.setColumns(20);
        ta_listahorasdisponibles.setRows(5);
        jScrollPane1.setViewportView(ta_listahorasdisponibles);

        ta_clasesposibles.setEditable(false);
        ta_clasesposibles.setColumns(20);
        ta_clasesposibles.setRows(5);
        jScrollPane4.setViewportView(ta_clasesposibles);

        jLabel11.setText("Lista de Clases que puede impartir");

        jLabel12.setText("Clases que puede impartir");

        jb_agregarclasemaestro.setText("Agregar clase");
        jb_agregarclasemaestro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_agregarclasemaestroMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel7)
                    .addComponent(jLabel12))
                .addGap(50, 50, 50)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jb_agregarMaestro, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cb_clasesposibles, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cb_horasdisponibles, javax.swing.GroupLayout.Alignment.LEADING, 0, 215, Short.MAX_VALUE)
                            .addComponent(tf_idMaestro, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tf_nombreMaestro, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jb_agregarHora, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jb_agregarclasemaestro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(55, 55, 55)
                        .addComponent(jLabel10))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tf_nombreMaestro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tf_idMaestro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cb_horasdisponibles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(jb_agregarHora))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cb_clasesposibles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(jb_agregarclasemaestro))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                        .addComponent(jb_agregarMaestro, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane4)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jTabbedPane1.addTab("Maestros", jPanel3);

        jb_generar.setText("Generar");
        jb_generar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_generarMouseClicked(evt);
            }
        });

        ta_resultado.setColumns(20);
        ta_resultado.setRows(5);
        jScrollPane2.setViewportView(ta_resultado);

        jb_vermatriz.setText("Ver matriz");
        jb_vermatriz.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_vermatrizMouseClicked(evt);
            }
        });

        jLabel13.setText("Lista de clases");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jb_vermatriz)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 698, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(369, 369, 369)
                        .addComponent(jb_generar, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(380, 380, 380)
                        .addComponent(jLabel13)))
                .addContainerGap(152, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(jb_vermatriz)
                        .addGap(237, 237, 237))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jb_generar, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );

        jTabbedPane1.addTab("Generacion de secciones", jPanel4);

        ta_matricula.setColumns(20);
        ta_matricula.setRows(5);
        jScrollPane5.setViewportView(ta_matricula);

        jb_simular.setText("Simular");
        jb_simular.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_simularMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(377, 377, 377)
                        .addComponent(jb_simular, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(182, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jb_simular, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Simular matricula", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 956, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jb_agregarClaseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_agregarClaseMouseClicked
        // TODO add your handling code here:
        if (!finClases) {
            if ("".equals(tf_nombreclase.getText()) || "".equals(tf_codigoclase.getText())) {
                JOptionPane.showMessageDialog(rootPane, "Ingrese datos correctos");
            } else {
                Clase objclase = new Clase(tf_nombreclase.getText(), tf_codigoclase.getText(), cb_facultades.getSelectedItem().toString());
                objclase.setLocation(clasequeva);
                clasequeva++;
                listadeclases.add(objclase);
                cb_clases.addItem(objclase);
                cb_clasesposibles.addItem(objclase);
                tf_nombreclase.setText("");
                tf_codigoclase.setText("");
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Ya ha finalizado de ingresar clases");
        }

    }//GEN-LAST:event_jb_agregarClaseMouseClicked

    private void jb_agregarAlumnoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_agregarAlumnoMouseClicked
        // TODO add your handling code here:
        if (finClases) {
            if ("".equals(tf_nombrealumno.getText()) || "".equals(tf_numerodecuenta.getText())) {
                JOptionPane.showMessageDialog(rootPane, "Ingrese datos correctos");
            } else {
                Alumno objalumno = new Alumno(tf_nombrealumno.getText(), tf_numerodecuenta.getText());
                objalumno.setClasesPreferidas(clasesPref);
                clasesPref = new ArrayList();
                ta_listaclasespref.setText("");
                tf_nombrealumno.setText("");
                tf_numerodecuenta.setText("");
                listadealumnos.add(objalumno);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Debe de presionar el boton de finalizar en la tab de Clases para continuar");
        }

    }//GEN-LAST:event_jb_agregarAlumnoMouseClicked

    private void jb_agregarAPreferidasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_agregarAPreferidasMouseClicked
        // TODO add your handling code here:
        if (finClases) {
            clasesPref.add((Clase) cb_clases.getSelectedItem());
            ta_listaclasespref.append(((Clase) cb_clases.getSelectedItem()).toString() + "  " + cb_horapreferida.getSelectedItem().toString() + "\n");
            matrix[cb_clases.getSelectedIndex()][cb_horapreferida.getSelectedIndex()]++;
        } else {
            JOptionPane.showMessageDialog(rootPane, "Debe de presionar el boton de finalizar en la tab de Clases para continuar");
        }


    }//GEN-LAST:event_jb_agregarAPreferidasMouseClicked

    private void jb_agregarMaestroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_agregarMaestroMouseClicked
        // TODO add your handling code here:
        if (finClases) {
            if ("".equals(tf_nombreMaestro.getText()) || "".equals(tf_idMaestro.getText())) {
                JOptionPane.showMessageDialog(rootPane, "Ingrese datos correctos");
            } else {
                Maestro objmaestro = new Maestro(tf_nombreMaestro.getText(), tf_idMaestro.getText());
                objmaestro.setHorasDisponible(horasDisp);
                objmaestro.setClasesPosibles(clasesMaestro);
                horasDisp = new ArrayList();
                tf_nombreMaestro.setText("");
                tf_idMaestro.setText("");
                ta_listahorasdisponibles.setText("");
                clasesMaestro = new ArrayList();
                listademaestros.add(objmaestro);
                ta_clasesposibles.setText("");
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Debe finalizar el ingresado de clases");
        }

    }//GEN-LAST:event_jb_agregarMaestroMouseClicked

    private void jb_agregarHoraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_agregarHoraMouseClicked
        // TODO add your handling code here:
        ta_listahorasdisponibles.append(cb_horasdisponibles.getSelectedItem().toString() + "\n");
        horasDisp.add(cb_horasdisponibles.getSelectedItem().toString());
    }//GEN-LAST:event_jb_agregarHoraMouseClicked

    private void jb_generarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_generarMouseClicked
        // TODO add your handling code here:
        //Ver que clases quieren matricular los alumnos
        long inicio = System.nanoTime();
        if (generado) {

        } else if (finClases) {

            int[] horas = new int[9];
            int minimo = 0;
            int indice = 0;
            for (int i = 0; i < listadeclases.size(); i++) {
                for (int j = 0; j < listadeclases.size(); j++) {
                    minimo = 0;
                    for (int k = 0; k < 9; k++) {
                        if (matrix[j][k] >= minimo) {
                            minimo = matrix[j][k];
                            indice = k;
                        }
                    }
                    listadeclases.get(j).setHora(cb_horasdisponibles.getItemAt(indice).toString());
                }
            }

            //Asignar maestros
            nuevaListaClases = new ArrayList();
            int min = 2000;
            int ind = 0;
            for (int i = 0; i < maestrosPorClases.length; i++) {
                for (int j = 0; j < maestrosPorClases.length; j++) {
                    if (maestrosPorClases[j] <= min) {
                        min = maestrosPorClases[j];
                        ind = j;

                    }
                }
                min = 1999;
                maestrosPorClases[ind] = 2000;
                nuevaListaClases.add(listadeclases.get(ind));
            }
            for (int i = 0; i < nuevaListaClases.size(); i++) {
                System.out.println(nuevaListaClases.get(i).toString());
            }
            for (int i = 0; i < nuevaListaClases.size(); i++) {
                for (int j = 0; j < listademaestros.size(); j++) {
                    if (listademaestros.get(j).getClasesPosibles().contains(nuevaListaClases.get(i)) && listademaestros.get(j).getHorasDisponible().contains(nuevaListaClases.get(i).getHora())) {
                        listademaestros.get(j).removeHoraDisponible(nuevaListaClases.get(i).getHora());
                        nuevaListaClases.get(i).setProfesor(listademaestros.get(j));
                        System.out.println("se agrego maestro");
                        //nuevaListaClases.get(i).setAbierta(true);//Aqui se abre
                        nuevaListaClases.get(i).setTieneprof(true);
                        break;
                    }
                }
            }
            //Ver que clases quedaron sin maestro
            for (int i = 0; i < nuevaListaClases.size(); i++) {

                if (!nuevaListaClases.get(i).isTieneprof()) {
                    for (int j = 0; j < listademaestros.size(); j++) {
                        if (listademaestros.get(j).getClasesPosibles().contains(nuevaListaClases.get(i)) && listademaestros.get(j).getHorasDisponible().size() > 0) {
                            nuevaListaClases.get(i).setHora(listademaestros.get(j).getHorasDisponible().remove(0));
                            nuevaListaClases.get(i).setProfesor(listademaestros.get(j));
                            //nuevaListaClases.get(i).setAbierta(true);//Aqui se abre
                            nuevaListaClases.get(i).setTieneprof(true);
                        }
                    }
                }
            }
            //Asignar aula
            for (int i = 0; i < nuevaListaClases.size(); i++) {
                for (int j = 0; j < listadeaulas.size(); j++) {
                    if (!listadeaulas.get(j).getHorasutilizada().contains(nuevaListaClases.get(i).getHora()) && nuevaListaClases.get(i).isTieneprof()) {
                        listadeaulas.get(j).getHorasutilizada().add(nuevaListaClases.get(i).getHora());
                        nuevaListaClases.get(i).setAula(listadeaulas.get(j));
                        nuevaListaClases.get(i).setAbierta(true);
                        System.out.println("se asigno aula");
                        break;
                    }
                }
            }
            //Imprimir
            for (int i = 0; i < nuevaListaClases.size(); i++) {
                Clase cla = nuevaListaClases.get(i);
                if (cla.isAbierta()) {
                    ta_resultado.append("Nombre de clase:" + cla.getNombre() + "  Hora:" + cla.getHora() + "  Profesor:" + cla.getProfesor().toString() + "  Aula:" + cla.getNumAula() + "\n");
                } else {

                }

            }

            generado = true;
        }
        long fin = System.nanoTime();
        long tot = fin - inicio;
        System.out.println("Generacion:" + tot);
    }//GEN-LAST:event_jb_generarMouseClicked

    private void jb_finMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_finMouseClicked
        // TODO add your handling code here:
        finClases = true;
        matrix = new int[listadeclases.size()][9];
        maestrosPorClases = new int[listadeclases.size()];
        for (int i = 0; i < listadeclases.size(); i++) {
            maestrosPorClases[i] = 0;
            for (int j = 0; j < 9; j++) {
                matrix[i][j] = 0;
            }
        }
        JOptionPane.showMessageDialog(rootPane, "Finalizado el ingreso de clases");

        try {
            numAulas = Integer.parseInt(JOptionPane.showInputDialog("Ingrese la cantidad de aulas que hay:"));
        } catch (Exception e) {
            numAulas = 40;
        } finally {
            for (int i = 0; i < numAulas; i++) {
                Aula objaula = new Aula(i);
                listadeaulas.add(objaula);
            }
        }

    }//GEN-LAST:event_jb_finMouseClicked

    private void jb_vermatrizMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_vermatrizMouseClicked
        // TODO add your handling code here:
        for (int i = 0; i < listadeclases.size(); i++) {
            for (int j = 0; j < 9; j++) {
                System.out.print(matrix[i][j] + "  ");
            }
            System.out.println("");
        }
        System.out.println("");
        for (int i = 0; i < maestrosPorClases.length; i++) {
            System.out.print(maestrosPorClases[i] + " ");
        }
        System.out.println("");
    }//GEN-LAST:event_jb_vermatrizMouseClicked

    private void jb_agregarclasemaestroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_agregarclasemaestroMouseClicked
        // TODO add your handling code here:
        if (finClases) {
            clasesMaestro.add((Clase) cb_clasesposibles.getSelectedItem());
            maestrosPorClases[cb_clasesposibles.getSelectedIndex()]++;
            ta_clasesposibles.append(cb_clasesposibles.getSelectedItem().toString() + "\n");
        } else {
            System.out.println("Debe finalizar el ingresado de clases");
        }

    }//GEN-LAST:event_jb_agregarclasemaestroMouseClicked

    private void jb_simularMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_simularMouseClicked
        // TODO add your handling code here:
        long inicio = System.nanoTime();
        if (finClases) {
            for (int i = 0; i < listadealumnos.size(); i++) {
                for (int j = 0; j < listadealumnos.get(i).getClasesPreferidas().size(); j++) {
                    Clase claseaux = listadeclases.get(listadealumnos.get(i).getClasesPreferidas().get(j).getLocation());
                    if (claseaux.isAbierta() && !(listadealumnos.get(i).getHorasOcupado().contains(claseaux.getHora())) && (claseaux.getCapacidad() > 0)) {
                        listadeclases.get(listadealumnos.get(i).getClasesPreferidas().get(j).getLocation()).reducirCapacidad();
                        listadealumnos.get(i).addClase(claseaux);

                    } else {
                        listadealumnos.get(i).reducirSatisfecho((float) 0.5);
                    }
                }
            }
            for (int i = 0; i < listadealumnos.size(); i++) {
                listadealumnos.get(i).verificarSeguidas();
            }
            for (int i = 0; i < listadealumnos.size(); i++) {
                ta_matricula.append(listadealumnos.get(i).toString() + "\n");
            }
            float promsat = 0;
            for (int i = 0; i < listadealumnos.size(); i++) {
                promsat += listadealumnos.get(i).getSatisfecho() / listadealumnos.size();
            }
            long fin = System.nanoTime();
            fin -= inicio;
            System.out.println("Simulacion:" + fin);
            JOptionPane.showMessageDialog(rootPane, "Nivel de satisfabilidad general es de: " + promsat);
        }

    }//GEN-LAST:event_jb_simularMouseClicked

    private void jb_cargarDatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_cargarDatosMouseClicked
        // TODO add your handling code here:
        if (!finClases) {
            listadeclases.add(new Clase("MATH", "M90", "Ingenieria"));
            listadeclases.add(new Clase("BIOLOGY", "b90", "Ingenieria"));
            listadeclases.add(new Clase("QUIMICA", "q90", "Salud"));
            listadeclases.add(new Clase("CALCULO", "C90", "Ingenieria"));
            listadeclases.add(new Clase("ALGEBRA", "MA90", "Ingenieria"));
            listadeclases.add(new Clase("ENGLISH", "ME90", "General"));
            listadeclases.add(new Clase("READING", "MRR90", "Derecho"));
            listadeclases.add(new Clase("ITALIANO", "MII90", "General"));
            listadeclases.add(new Clase("DEPORTE", "DD90", "General"));
            listadeclases.add(new Clase("ARTE", "A90", "Arquitectura"));
            listadeclases.add(new Clase("FRANCES", "F90", "General"));

            listadealumnos.add(new Alumno("ALUMNO FR1", "100909"));
            listadealumnos.add(new Alumno("ALUMNO FR2", "100909"));
            listadealumnos.add(new Alumno("ALUMNO FR3", "100909"));
            listadealumnos.add(new Alumno("ALUMNO FR4", "100909"));
            listadealumnos.add(new Alumno("ALUMNO FR5", "100909"));
            listadealumnos.add(new Alumno("ALUMNO FR6", "100909"));
            listadealumnos.add(new Alumno("ALUMNO FR7", "100909"));
            listadealumnos.add(new Alumno("ALUMNO FR8", "100909"));
            listadealumnos.add(new Alumno("ALUMNO FR9", "100909"));
            listadealumnos.add(new Alumno("ALUMNO FR10", "100909"));
            listadealumnos.add(new Alumno("ALUMNO FR11", "100909"));
            listadealumnos.add(new Alumno("ALUMNO FR12", "100909"));
            listadealumnos.add(new Alumno("ALUMNO FR13", "100909"));
            listadealumnos.add(new Alumno("ALUMNO FR14", "100909"));
            listadealumnos.add(new Alumno("ALUMNO FR15", "100909"));
            listadealumnos.add(new Alumno("ALUMNO FR16", "100909"));
            listadealumnos.add(new Alumno("ALUMNO FR17", "100909"));
            listadealumnos.add(new Alumno("ALUMNO FR18", "100909"));
            listadealumnos.add(new Alumno("ALUMNO FR19", "100909"));
            listadealumnos.add(new Alumno("ALUMNO FR20", "100909"));
            listadealumnos.add(new Alumno("ALUMNO FR21", "100909"));
//            Alumno alm = new Alumno("ALUMNO FR1", "100909");
//            Clase clas = new Clase("FRANCES", "F90", "General");
//            int index1 = listadealumnos.indexOf(alm);
//            System.out.println(index1);
//            int index2 = listadeclases.indexOf(clas);
//            System.out.println(index2);
            for (int i = 0; i < listadeclases.size(); i++) {
                cb_clases.addItem(listadeclases.get(i));
                cb_clasesposibles.addItem(listadeclases.get(i));
                listadeclases.get(i).setLocation(i);
            }
            for (int i = 0; i < listadealumnos.size(); i++) {
                listadealumnos.get(i).addClasePreferida(listadeclases.get(10));
            }
            JOptionPane.showMessageDialog(rootPane, "Se han cargado los datos");

        }

    }//GEN-LAST:event_jb_cargarDatosMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cb_clases;
    private javax.swing.JComboBox cb_clasesposibles;
    private javax.swing.JComboBox cb_facultades;
    private javax.swing.JComboBox cb_horapreferida;
    private javax.swing.JComboBox cb_horasdisponibles;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jb_agregarAPreferidas;
    private javax.swing.JButton jb_agregarAlumno;
    private javax.swing.JButton jb_agregarClase;
    private javax.swing.JButton jb_agregarHora;
    private javax.swing.JButton jb_agregarMaestro;
    private javax.swing.JButton jb_agregarclasemaestro;
    private javax.swing.JButton jb_cargarDatos;
    private javax.swing.JButton jb_fin;
    private javax.swing.JButton jb_generar;
    private javax.swing.JButton jb_simular;
    private javax.swing.JButton jb_vermatriz;
    private javax.swing.JTextArea ta_clasesposibles;
    private javax.swing.JTextArea ta_listaclasespref;
    private javax.swing.JTextArea ta_listahorasdisponibles;
    private javax.swing.JTextArea ta_matricula;
    private javax.swing.JTextArea ta_resultado;
    private javax.swing.JTextField tf_codigoclase;
    private javax.swing.JTextField tf_idMaestro;
    private javax.swing.JTextField tf_nombreMaestro;
    private javax.swing.JTextField tf_nombrealumno;
    private javax.swing.JTextField tf_nombreclase;
    private javax.swing.JTextField tf_numerodecuenta;
    // End of variables declaration//GEN-END:variables
    ArrayList<Clase> listadeclases = new ArrayList();
    ArrayList<Alumno> listadealumnos = new ArrayList();
    ArrayList<Maestro> listademaestros = new ArrayList();
    ArrayList<Aula> listadeaulas = new ArrayList();
    ArrayList<Clase> clasesPref = new ArrayList();
    ArrayList<Clase> clasesMaestro = new ArrayList();
    ArrayList<String> horasDisp = new ArrayList();
    ArrayList<Clase> nuevaListaClases = new ArrayList();
    boolean finClases = false;
    int[][] matrix;
    int[] maestrosPorClases;
    boolean generado = false;
    int clasequeva = 0;
    int numAulas = 0;
}
